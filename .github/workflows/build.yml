on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  APP_NAME: lgpt

jobs:
  build_amd64:
    name: Build Linux x86_64 (amd64)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller requests

      - name: Build amd64 binary
        run: |
          pyinstaller --onefile --noconsole ${{ env.APP_NAME }}.py

      - name: Rename amd64 binary
        run: |
          mkdir release
          mv dist/${{ env.APP_NAME }} release/lgpt-amd64

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: lgpt-amd64
          path: release/lgpt-amd64

      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/lgpt-amd64

  build_arm64:
    name: Build Linux ARM64
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build arm64 binary in Docker
        run: |
          docker run --rm -v $PWD:/src -w /src --platform linux/arm64 python:3.11-slim bash -c "
            apt-get update && apt-get install -y gcc && \
            pip install pyinstaller requests && \
            pyinstaller --onefile --noconsole ${{ env.APP_NAME }}.py && \
            mkdir -p release && \
            mv dist/${{ env.APP_NAME }} release/lgpt-arm64
          "

      - name: Upload arm64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: lgpt-arm64
          path: release/lgpt-arm64

      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/lgpt-arm64
